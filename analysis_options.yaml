# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    directives_ordering: false
    require_trailing_commas: false
    sort_pub_dependencies: false

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

analyzer:
  errors:
    missing_return: error
    missing_required_param: error
    must_be_immutable: error
    sort_unnamed_constructors_first: ignore
    prefer_const_literals_to_create_immutables: ignore
    avoid_function_literals_in_foreach_calls: ignore
    no_logic_in_create_state: ignore
    depend_on_referenced_packages: ignore
    invalid_annotation_target: ignore

  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/injection.config.dart"
    - "**/router.gr.dart"
    - "generated_plugin_registrant.dart"
    - "lib/presentation/brain_c_icons.dart"